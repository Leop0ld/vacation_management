# Generated by Django 2.0 on 2017-12-09 07:55

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=64, verbose_name='이름')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='이메일 주소')),
                ('remain_date', models.PositiveIntegerField(default=0, verbose_name='남은 일수')),
                ('team', models.PositiveSmallIntegerField(choices=[(0, '기타'), (1, 'IT'), (2, '학예'), (3, '마케팅'), (4, 'CS'), (5, '경영지원'), (6, '오퍼레이션'), (7, '세일즈')], default=0, verbose_name='팀')),
                ('is_team_leader', models.BooleanField(default=False, verbose_name='팀리더 여부')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='어드민 여부')),
                ('joined_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='가입일시')),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now, verbose_name='마지막 로그인 일시')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
